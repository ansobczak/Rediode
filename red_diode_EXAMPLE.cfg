# red_diode.cfg 2024-03-04 20:29:59 dom
# locate in /home/pi/Python/red_diode.cfg
# highlighting mode: ctr-shift-h: .ini
# or change location in red_diode_procedures.py 

[Global]
#global parameters.

#geo coordinates of the house
longitude = -20.46 
latitude  = 51.25 

#alarm parameters  
alarmStartDelay = 30
alarmLongivity  = 30
alarmEnterDelay = 15

#alarmStartDelay  - time to leave in seconds before alarm is armed
#alarmDuration - time of the alarm when intrusion detected
#alarmEnterDelay - time to swith alarm off after entering - or alarm will be activated


#minutes coorecting sur rise and sunset (0 or multiplication of 5)
#   positive correction make sunrise/sunset later, negative earlier 

sun_rise_delta = -20
sun_set_delta  = 15


#configuration file location (or change location in red_diode_main.py, find the line >>    CfFile = '/home/pi/Python/red_diode.cfg' and change it)
CfFile= '/home/pi/Python/red_diode.cfg'   

#button hold time
holdtime = 0.75    


[mqtt]
#mqtt communication parameters
username = mqttuname 
password = mqttpwd
broker_address = localhost 
broker_port = 9999 
broker_keepalive = 60 
mqttUname = rediode  
topics = red red/buttons red/temp/ red/humi red/hartbit /red/sun red/system red/monitor red/alarm cmnd/tasmota_gniazdko01/POWER1 cmnd/tasmota_gniazdko01/POWER2
hartbit = 3  

#username = username            #mqtt user name to log into broker
#password = password            #mqtt user password to log into broker
#broker_address = localhost      #mqtt broker adres. If on another machine provide ip address example 192.168.123.123
#broker_port = 9999               #mqtt broker port
#broker_keepalive = 60             #mqtt broker keepalive parameter
#mqttUname = mqttUname              #mqtt client uniqu name 
#topics = red red/buttons red/temp/ red/humi red/hartbit /red/sun red/system red/monitor red/alarm             #mqtt topic list - add as required. First should be always the main topic
#hartbit = 3                    #mqtt red/hardbit topic message send frequency in seconds - mainly use by arduino not to dye


[i2cbus]

#defining i2c buses available at the device
#on Rpi ZERO possible are: i2c1 and i2c3 (as a software i2c) 
#on Rpi4b posible are: i2c1, i2c3-6 (!!!!!!!!!!!!!!!! NEVER USE i2c0 nor i2c2 !!!!!!!!!!!!!!!!)

buses=1
      3


[Chips]

#     MCP27017 configuration


#  chip-name | bus-number | adres-on-bus 


MCP23017= MCP20 1 0x20 
          MCP21 1 0x21 
          MCP22 1 0x22 
          MCP23 1 0x23 
          MCP24 1 0x24 
          MCP25 1 0x25 
          MCP26 1 0x26
          MCP27 1 0x27   


#           PCA9685 Servo PWM configuration

#PCA9685 Servo PWM for RPi https://www.abelectronics.co.uk/p/72/servo-pwm-pi
#channels 1-16. Chanell can be use directly or via Darlington array, means reverse logic. 
#servo range - what is the servo max value

#  chip-name | bus-number | adres-on-bus | max num of channels 1-16 |servo range  
ServoPWM= PWM1 1 0x40 16 4095


#dimming of LED
#Definitions here are for PCA9685 Servo PWM for RPi https://www.abelectronics.co.uk/p/72/servo-pwm-pi
#output name | ServoPWM chip | channel number (PWM channel on PCA9685 ) |  power supply relay name | optional: RNG servo range (optional, if not present max for ServoPWM is used | 
                        # |STEP dimming step, if not present 40 is used, try values 5-100 (slow - fast)

dimming= Zas1_31 PWM1 9  L3_ZasLed_1 RNG 4095 STEP 80 
         Zas2_7  PWM1 16 L3_ZasLed_2 RNG 4095 STEP 20
         Zas3_25 PWM1 5  L3_ZasLed_3 STEP 100
         Zas4_3  PWM1 6  L3_ZasLed_4 RNG 4095 STEP 20


[Relay]
# Outputs are defined here
# Relay connections to MCP27017 GPIOs  
# define what outputs are conected to relay and GPIO's. use Out_map() to generate this part
# outputs pins  0-7

# chip_name | GPIO_pin | relay_name | output_name | optional: PWM - dimming Mark (PWM) |  optional REV (reverse logic for fail-safe operation)
 
Pins_relay= MCP20	7	relay_MCP20_pin_7	output_MCP20_pin_7
            MCP20	6	relay_MCP20_pin_6	output_MCP20_pin_6
            MCP20	5	relay_MCP20_pin_5	output_MCP20_pin_5
            MCP20	4	relay_MCP20_pin_4	output_MCP20_pin_4
            MCP20	3	relay_MCP20_pin_3	output_MCP20_pin_3
            MCP20	2	relay_MCP20_pin_2	output_MCP20_pin_2
            MCP20	1	relay_MCP20_pin_1	output_MCP20_pin_1
            MCP20	0	relay_MCP20_pin_0	output_MCP20_pin_0
;			            
            MCP21	7	relay_MCP21_pin_7	output_MCP21_pin_7
            MCP21	6	relay_MCP21_pin_6	output_MCP21_pin_6
            MCP21	5	relay_MCP21_pin_5	output_MCP21_pin_5
            MCP21	4	relay_MCP21_pin_4	output_MCP21_pin_4
            MCP21	3	relay_MCP21_pin_3	output_MCP21_pin_3
            MCP21	2	relay_MCP21_pin_2	output_MCP21_pin_2
            MCP21	1	relay_MCP21_pin_1	output_MCP21_pin_1
            MCP21	0	relay_MCP21_pin_0	output_MCP21_pin_0
;			            
            MCP22	0	relay_MCP22_pin_0	output_MCP22_pin_0
            MCP22	1	relay_MCP22_pin_1	output_MCP22_pin_1
            MCP22	2	relay_MCP22_pin_2	output_MCP22_pin_2
            MCP22	3	relay_MCP22_pin_3	output_MCP22_pin_3
            MCP22	4	relay_MCP22_pin_4	output_MCP22_pin_4
            MCP22	5	relay_MCP22_pin_5	output_MCP22_pin_5
            MCP22	6	relay_MCP22_pin_6	output_MCP22_pin_6
            MCP22	7	relay_MCP22_pin_7	output_MCP22_pin_7
;			            
            MCP23	0	relay_MCP23_pin_0	output_MCP23_pin_0
            MCP23	1	relay_MCP23_pin_1	output_MCP23_pin_1
            MCP23	2	relay_MCP23_pin_2	output_MCP23_pin_2
            MCP23	3	relay_MCP23_pin_3	output_MCP23_pin_3
            MCP23	4	relay_MCP23_pin_4	output_MCP23_pin_4
            MCP23	5	relay_MCP23_pin_5	output_MCP23_pin_5
            MCP23	6	relay_MCP23_pin_6	output_MCP23_pin_6
            MCP23	7	relay_MCP23_pin_7	output_MCP23_pin_7
;			            
            MCP24	0	relay_MCP24_pin_0	output_MCP24_pin_0
            MCP24	1	relay_MCP24_pin_1	output_MCP24_pin_1
            MCP24	2	relay_MCP24_pin_2	output_MCP24_pin_2
            MCP24	3	relay_MCP24_pin_3	output_MCP24_pin_3
            MCP24	4	relay_MCP24_pin_4	output_MCP24_pin_4
            MCP24	5	relay_MCP24_pin_5	output_MCP24_pin_5
            MCP24	6	relay_MCP24_pin_6	output_MCP24_pin_6
            MCP24	7	relay_MCP24_pin_7	output_MCP24_pin_7
;			            
            MCP25	0	relay_MCP25_pin_0	output_MCP25_pin_0
            MCP25	1	relay_MCP25_pin_1	output_MCP25_pin_1
            MCP25	2	relay_MCP25_pin_2	output_MCP25_pin_2
            MCP25	3	relay_MCP25_pin_3	output_MCP25_pin_3
            MCP25	4	relay_MCP25_pin_4	output_MCP25_pin_4
            MCP25	5	relay_MCP25_pin_5	output_MCP25_pin_5
            MCP25	6	relay_MCP25_pin_6	output_MCP25_pin_6
            MCP25	7	relay_MCP25_pin_7	output_MCP25_pin_7
;			            
            MCP26	7	relay_MCP26_pin_7	output_MCP26_pin_7
            MCP26	6	relay_MCP26_pin_6	output_MCP26_pin_6
            MCP26	5	relay_MCP26_pin_5	output_MCP26_pin_5
            MCP26	4	relay_MCP26_pin_4	output_MCP26_pin_4
            MCP26	3	relay_MCP26_pin_3	output_MCP26_pin_3
            MCP26	2	relay_MCP26_pin_2	output_MCP26_pin_2
            MCP26	1	relay_MCP26_pin_1	output_MCP26_pin_1
            MCP26	0	relay_MCP26_pin_0	output_MCP26_pin_0
;			            
            MCP27	7	relay_MCP27_pin_7	output_MCP27_pin_7
            MCP27	6	relay_MCP27_pin_6	output_MCP27_pin_6
            MCP27	5	relay_MCP27_pin_5	output_MCP27_pin_5
            MCP27	4	relay_MCP27_pin_4	output_MCP27_pin_4
            MCP27	3	relay_MCP27_pin_3	output_MCP27_pin_3
            MCP27	2	relay_MCP27_pin_2	output_MCP27_pin_2
            MCP27	1	relay_MCP27_pin_1	output_MCP27_pin_1
            MCP27	0	relay_MCP27_pin_0	output_MCP27_pin_0


             
[Buttons]

# inputs definitions. Use In_map()
# inputs like buttons, contactrons, motion detection. 

# button:  
#  input_name | chip_name | GPIO_pin (8-15) | | fisrt_sequence  | second_sequence | output_name list  |  ht 0.7 optional holdtime in seconds | optional_contactron or bistable (CON)| optional motion detection (MOV 5) or (NMO 5) for nigh only motion detection and number of seconds | SUN 30,40 sun delta for sunrise and sunset correction

#     name | chip  | pin | seq1 | seq2 |  output list (comma separated, no spaces: out1,ou2,out3) | ht time | CON | MOV or NMO (time after move)| DLY time of delay ACT action (use with S11 S8) |SUN rise,set delta


#butt= con1  MCP01    14    s5 s6 YELLOW CON   
#      y1    MCP01    3     s9 s10  led1,RED       
##      y2    MCP01    4     s4 s7   led2,led3,led4,RED 
#      y3    MCP01    5     s11 s5  GREEN,YELLOW,led4 DLY 5
#      y4    MCP01    6     S8 S5   GREEN,YELLOW,led4 DLY 5 ACT togle
#      m1    MCP01    15    on off   led1 NMO 45 SUN 15,-15 
#      m2    MCP01    13    on off   GREEN MOV 5
#      alrm  MCP01     12   ARM_ALARM DARM_ALARM YELLOW  CON
#      g2 MCP01 11 ARM_ALARM DARM_ALARM lamp1
#      m1 MCP01 8 on off lamp1 NMO 45
#      con1 MCP01 10 s5 s6 lamp1 CON


butt= p1_17_20_08 MCP20 8  s0 s0 lamp0
      p1_17_20_09 MCP20 9  s0 s0 lamp0
      p1_19_20_10 MCP20 10 s0 s0 lamp0
;      p1_24_20_11 MCP20 11  s0 s0 lamp0
;      p1_24_20_12 MCP20 12  s0 s0 lamp0
;     p1_19_20_13 MCP20 13  s0 s0 lamp0
      p1_23_20_14 MCP20 14  s0 s0 lamp0
      p1_23_20_15 MCP20 15 s0 s0 lamp0
;
      p1_18_21_08 MCP21 8 s0 s0 lamp0
      p1_18_21_09 MCP21 9  s0 s0 lamp0
      p1_20_21_10 MCP21 10  s0 s0 lamp0
      p1_22_21_11 MCP21 11  s0 s0 lamp0
      p1_22_21_12 MCP21 12  s0 s0 lamp0
      p1_20_21_13 MCP21 13 s0 s0 lamp0
      p1_21_21_14 MCP21 14  s0 s0 lamp0
      p1_21_21_15 MCP21 15  ARM_ALARM DARM_ALARM s0 s0 lamp0
;
      p2_19_22_08 MCP22 8  s0 s0 lamp0
      p2_20_22_09 MCP22 9  s0 s0 lamp0
      p2_21_22_10 MCP22 10 s0 s0 lamp0
      p2_21_22_11 MCP22 11 s0 s0 lamp0
      p2_22_22_12 MCP22 12  s0 s0 lamp0
      p2_23_22_14 MCP22 14 s0 s0 lamp0
      p2_23_22_15 MCP22 15  s0 s0 lamp0
;
      p2_01_24_08 MCP24 8  s0 s0 lamp0
      p2_02_24_09 MCP24 9  s0 s0 lamp0
      p2_03_24_10 MCP24 10  s0 s0 lamp0
;      p2_09_24_11 MCP24 11  s0 s0 lamp0
;      p2_08_24_12 MCP24 12  s0 s0 lamp0
      p2_04_24_13 MCP24 13  s0 s0 lamp0
      p2_06_24_14 MCP24 14  s0 s0 lamp0
;      p2_07_24_15 MCP24 15  s0 s0 lamp0
;
      p2_11_25_08 MCP25 8  s0 s0 lamp0
      p2_12_25_09 MCP25 9  s0 s0 lamp0
;
;      p2_13_25_10 MCP25 10  s0 s0 lamp0
;      p2_18_25_11 MCP25 11  s0 s0 lamp0
;
      p2_17_25_12 MCP25 12  s0 s0 lamp0
      p2_10_25_13 MCP25 13  s0 s0 lamp0
      p2_15_25_14 MCP25 14  s0 s0 lamp0
      p2_16_25_15 MCP25 15  s0 s0 lamp0
;
;      p1_01_23_08 MCP23 8  s0 s0 lamp0
;      p1_02_23_09 MCP23 9  s0 s0 lamp0
      p1_10_23_10 MCP23 10  on off lamp0 MOV 300
;      p1_12_23_11 MCP23 11  s0 s0 lamp0
;      p1_05_23_12 MCP23 12  s0 s0 lamp0
;      p1_09_23_13 MCP23 13  s0 s0 lamp0
;      p1_03_23_14 MCP23 14   s0 s0 lamp0
      p1_04_23_15 MCP23 15  on off lamp0,lamp0 NMO 300 SUN 10,10
;
;      p1_11_27_08 MCP27 8  s0 s0 lamp0
;      p1_06_27_09 MCP27 9  s0 s0 lamp0
;      p1_07_27_10 MCP27 10  s0 s0 lamp0 
;      p1_99_27_11 MCP27 11  s0 s0 lamp0
;      p1_99_27_12 MCP27 12  s0 s0 lamp0
;      p1_08_27_13 MCP27 13  s0 s0 lamp0 
;      p1_99_27_14 MCP27 14  s0 s0 lamp0
;      p1_99_27_15 MCP27 15  s0 s0 lamp0 



alarm_outputs=lamp0,lamp0,lamp0,lamp0,lamp0,lamp0

# seq1 and seq2 values:
# s0: seq 0 do nothing
# s1: seq 1 one at the time  - 100 010 001 000 cycle
# s2: seq 2 all combinations - 100 010 110 001 101 011 111 000 cycle
# s3: seq 3 adding in  sequence - 100 110 111 000 cycle
# s4: seq 4 all on/off - if at least one is on all will be off first, than next push will on all 
# s5: seq 5 all off
# s6: seq 6 all on
# s7: seq 7 dim LED via PCA9685 Servo PWM
# s8: seq_8: action delayed by X in seconds, for buttons use DLY S ACT act (where S in number of seconds, act is action). for virtual buttons: parameters as list: delay time in seconds, action (dimm, on, off, pass, togle), outputs
# s9: seq_9: togle ouptups and set the motion detection on. typical short press 
# s10: seq_10: set ouptups off and set the motion detection off, untill set on - typical use: long press )
# s11: seq_11: turn on for X s or turn off, for buttons use DLY S (where S in number of seconds). for virtual buttons: parameters as list: delay time in seconds, outputs (use with blinders)
# s12: seq_12: turn on for 0.5s - to use with roleta
# s13: seq_13: turn on for X s, for buttons use DLY S (where S in number of seconds). for virtual buttons: parameters as list: delay time in seconds, outputs (use with blinders). Symilar to s11 but do not turn off if outputs are on (it use sq_6, while s11 use seq_4)
# s14: seq_14: blinks outputs for delay_time (parameter) seconds, blink last for seq_12_delay (1 sec)
#
#
# for contactron use s5 s6
# for bistable switch use s6 s5
# for MOV use on, off, togle, pass
# for alarm use ARM_ALARM to set alarm on DARM_ALARM to set off
# for 'roleta' use s11 s5   or s12 s5 or s12 s0
# m1 or v1 - for the  v_pres - need parameters list to passed when calling [action, outputs, dimm], use for motion detectors, example motiondetector1 v1 v1


######################################  V_BUTTONS
# virtual buttons. V_BUTTONS are available trough MQTT (publish topic 'red' and payload v-butt name.  example 'red/night_on'
# virtual buttons can be trigered as schedule or by sun rise/set

# parameters for procedure v_press: 1st par: 
#           on, off , togle, pass, dimm, roleta. following parameters are outputs name's
# parameter 'pass' can be used to do nothing.
# parameter 'dimm' can be used to dimm led by xx% (example: led2_20 v_pres dimm 20 led1  ) 
# special vbuttons:
#      1. Turning on off the lights on sunset and sunrise:
#          auto_night_on* v_press on laps.names.to.be.turned.on.sunset
#          auto_night_off* v_press off laps.names.to.be.turned.off.on.sunrise
#              there can be many auto_night_on/off entries, replace * with any string 
#      2. Turnig off all receivers:
#            alloff all_off
#      3. toggle all receivers  #for testing only, do not use live
#            toggle_all tog 
#       4. arming / disarming alarm:
#            alarm_on v_pres ARM_ALARM_V output
#            alarm_off v_pres DARM_ALARM_V   output
#        5. alarm actions 
;            alarm_intruder_start v_pres off alarm_intruder         intruder detected
;            alarm_intruder_end v_pres on alarm_intruder
;            alarm_detection_start v_pres on alarm_detection         alarmed
;            alarm_detection_end v_pres off alarm_detection
;            alarm_failure_on v_pres off alarm_failure            failure
;            alarm_failure_off v_pres on alarm_failure
;            alarm_attack_on v_pres off alarm_attack             atack/seizure manual - napad
;            alarm_attack_off v_pres on alarm_attack
;            alarm_fire_on v_pres off alarm_fire               fire detected
;            alarm_fire_off v_pres on alarm_fire     
#        6. to be used for open/close roleta
#              auto_night_on_test v_pres roleta 1_g,roleta 2_g
#        6.5 to dhut roleta at komfort position (only bottom position)
#              roleta_example v_pres roleta_komfort Rol_04_D_Pok_A
#        7. turning on for X seconds
#              auto_night_on_test v_pres delay X Light_1
#        8 turning on off at given time: 
#              schedule_name v_press action CRON mon,mday,hour,min,wday,yday   outputs,otputs_n 
#              mon month number
#              mday month day number
#              hour 
#              min - at least this hould be specified
#              wday week day number
#              yday year day number
#            example:
#                                               mon day hr min sec weekday yr_day
#              schedule_close_roleta_1  v_pres on CRON * * 18 15 * * *  roleta1_D,roleta2_D
#              ATTENTION: be as specific as possible. Setting month only will end up trigering action every minut on the given month.
#                          
#  payload_text | function | function_parameters 
# example 1: alloff all_off
# example 2: auto_night_on_01 v_pres on zew
#            auto_night_off_01 v_pres on zew
# example 3: kuchnia v_pres togle kuch1 kuch3
# example 4: with_delay S8 1 off pok1
# the example 4 demostrate direct use of seq_n functions. 


# v_button: name (use it as payload) | procedure | optional parameters for procedure |
vbutt=   alloff all_off
#all_off - use only in emergency.
#
# all_lights_off wyłącza światła i ledy oraz zasilacze ledów. Nie tyka automatyki i rolet.
         all_lights_off v_pres off lamp0,lamp0,lamp0
#         toggle_all tog #for testing only, do not use live
#         re_config re_read_config /home/pi/Python/red_diode.cfg
#         alarm_start_detection v_pres on lamp1
#         alarm_end_detection v_pres off lamp1
# powyżej stałe
#
#
#dla rolet ######################### start #################################
#
# w domu: rano: 10 lub 20, wieczorem: 30, 35
# wyjazd rano: 40,  wieczorem: 60 lub 70
#
#
#
# 20 podnosząca wszystkie rolety o 7:00 - - wariant w domu lub poprzednia o świcie
         schedule_rolety_all_G_1 v_pres roleta CRON * * 7 0 * * * rol0,rol1
# 30 zamykająca wybrane rolety o 22:30
         schedule_rolety_D_2 v_pres roleta CRON * * 22 30 * * * rol0,rol1
#
# 35 zamyka roletę w łazience po zmierzchu i ustawia roletę w pozycji komfort
         auto_night_on_rolety_night_D1 v_pres roleta rol0,rol1
         auto_night_on_rolety_night_D2 v_pres roleta_komfort rol0,rol1
#
# 40 podnosząca wybrane rolety o świcie dla kwiatków - wariant wyjazdowy
#         auto_night_off_rolety_2 v_pres roleta rol0,rol1
#
# 60 zamykająca wszystkie rolety o zmierzchu
#         auto_night_on_rolety_1 v_pres roleta rol0,rol1
#
#
# 70 zamykająca wszystkie rolety o 23:30 - wariant wyjazdowy
#         schedule_rolety_all_D_3 v_pres roleta CRON * * 23 49 * * * rol0,rol1
#
#dla rolet ######################### koniec #################################
#
#########################  pies ############
#włącza wybrane światła o zmierzchu na 9 godzin (dla psa)
         auto_night_on_2 v_pres delay 32400 lamp0,lamp1
         auto_night_on_25 v_pres dimm 30 lamp0,lamp1 
#wyłącza światło (dla psa) o 0:30 w nocy
         schedule_wylacz_2  v_pres off CRON * * 0 30 * * *  lamp0,lamp1
#przełącza światło (dla psa) MQTT
         pies v_pres togle lamp0,lamp1
#
#
#światło przed drzwiami i na elewacji włączane o zmierzchu
         auto_night_on_ZewDrzwi_20 v_pres on lamp0,lamp1
#
#światło przed drzwiami wyłączane o świcie
         auto_night_off_ZewDrzwi_20 v_pres off lamp0,lamp1
#
#światło na elewacji gaszone o 23:45
         schedule_elewacja_off_01  v_pres off CRON * * 23 45 * * *  lamp0,lamp1
#
#
#     światła  MQTT
         ZewDrzwi_20 v_pres togle lamp0,lamp1
         Elewacja_21 v_pres togle lamp0,lamp1
         pok_A v_pres togle lamp0,lamp1
         maszynownia v_pres togle lamp0,lamp1
         taras22 v_pres togle lamp0,lamp1
         szczyt v_pres togle lamp0,lamp1
         salon_8 v_pres togle lamp0,lamp1
#
#obsługa rolet przez MQTT G góra, D dół K komfort
#    Góra
         rolety_G_1 v_pres roleta rol0,rol1
#        
#     Dół 
         rolety_D_1 v_pres roleta rol0,rol1
#
#
# do alarmu - can be used via MQTT
         alarm_on_mqtt v_pres ARM_ALARM_V alarmbuton
         alarm_off_mqtt v_pres DARM_ALARM_V alarmbuton
# do alarmu - do not use from MQTT!!!
         alarm_intruder_start v_pres off alarm_intruder
         alarm_intruder_end v_pres on alarm_intruder
         alarm_detection_start v_pres on alarm_detection
         alarm_detection_end v_pres off alarm_detection
         alarm_failure_on v_pres off alarm_failure
         alarm_failure_off v_pres on alarm_failure
         alarm_attack_on v_pres off alarm_attack 
         alarm_attack_off v_pres on alarm_attack
         alarm_fire_on v_pres off alarm_fire
         alarm_fire_off v_pres on alarm_fire

[Sensors]


# naming temperature 1-wire sensors DS18B20
# however, without this temperature will be still provided but without name
# details of file location - should be standard for Rpi
# run 'ls /sys/bus/w1/devices' and copy the names that starts with '28-' for tempetature sensors
temp_path=/sys/bus/w1/devices/
temp_file=temperature

#        sensor code      | name | read frequency in sec
termo=  28-01187712fe4f  Pokoj1 25
        28-00000c1b421a  Pokoj2 25

# naming term and hum sensor AM2320
# frequency for this one should be low (like 30 or more seconds), as too frequent read can affect the result 
#     sensor human redable name | i2c bus | i2c address | read frequency in sec
terhum= pok3 3  0x5c 30
    #     pok4 1 0x5c 30


